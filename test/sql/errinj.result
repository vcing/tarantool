remote = require('net.box')
---
...
errinj = box.error.injection
---
...
fiber = require('fiber')
---
...
box.sql.execute('create table test (id primary key, a float, b text)')
---
...
box.schema.user.grant('guest','read,write,execute', 'universe')
---
...
cn = remote.connect(box.cfg.listen)
---
...
cn:ping()
---
- true
...
-- gh-2601 iproto messages are corrupted
errinj = box.error.injection
---
...
fiber = require('fiber')
---
...
errinj.set("ERRINJ_WAL_DELAY", true)
---
- ok
...
insert_res = nil
---
...
select_res = nil
---
...
function execute_yield() insert_res = cn:execute("insert into test values (100, 1, '1')") end
---
...
function execute_notyield() select_res = cn:execute('select 1') end
---
...
f1 = fiber.create(execute_yield)
---
...
while f1:status() ~= 'suspended' do fiber.sleep(0) end
---
...
f2 = fiber.create(execute_notyield)
---
...
while f2:status() ~= 'dead' do fiber.sleep(0) end
---
...
errinj.set("ERRINJ_WAL_DELAY", false)
---
- ok
...
while f1:status() ~= 'dead' do fiber.sleep(0) end
---
...
insert_res
---
- rowcount: 1
...
select_res
---
- metadata: [{'name': '1'}]
  rows:
  - [1]
...
cn:close()
---
...
box.sql.execute('drop table test')
---
...
--
-- gh-3326: after the iproto start using new buffers rotation
-- policy, SQL responses could be corrupted, when DDL/DML is mixed
-- with DQL. Same as gh-3255.
--
box.sql.execute('CREATE TABLE test (id integer primary key)')
---
...
cn = remote.connect(box.cfg.listen)
---
...
ch = fiber.channel(200)
---
...
errinj.set("ERRINJ_IPROTO_TX_DELAY", true)
---
- ok
...
for i = 1, 100 do fiber.create(function() for j = 1, 10 do cn:execute('REPLACE INTO test VALUES (1)') end ch:put(true) end) end
---
...
for i = 1, 100 do fiber.create(function() for j = 1, 10 do cn.space.TEST:get{1} end ch:put(true) end) end
---
...
for i = 1, 200 do ch:get() end
---
...
errinj.set("ERRINJ_IPROTO_TX_DELAY", false)
---
- ok
...
box.sql.execute('DROP TABLE test')
---
...
box.schema.user.revoke('guest', 'read,write,execute', 'universe')
---
...
